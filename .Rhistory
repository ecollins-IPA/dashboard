theme_void() + coord_map() + facet_wrap(~variable, labeller = labeller(variable = var_labs))
my_vars %>% filter(family == fam) %>% select(short_label, description) %>% kable(caption = "Data definitions", col.names = c("Measure", "Definition"))
k <- k+1
knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
library(openxlsx)
library(knitr)
library("xlsx")
library(geosphere)
library(readstata13)
library(rgdal)
library(tidyverse)
library(skimr)
library(ggplot2)
library(broom)
library(mapproj)
library(magrittr)
library(maptools)
# CHECKS
if(!exists("my_data")) stop("my_data missing")
if(!exists("my_vars")) stop("my_vars missing")
if(!exists("my_text")) stop("my_text missing")
if(!all(c("date", "id") %in% names(my_data))) stop("my_data should include date and id variables")
my_data <- mutate(my_data, date = as.Date(date))
families   <- my_vars %>% pull(family) %>% unique
n_families <- length(families)
k          <- 1
vars_used  <- my_vars %>% filter(!is.na(variable)) %>% pull(variable)
vars_used  <-c("start", "district", vars_used)
# Prep maps
shp <- readOGR(
dsn= my_maps,
layer="SLE_adm3",
verbose=FALSE,
stringsAsFactors = F
)
shp_df <- broom::tidy(shp, region = "NAME_2")
library(DT)
my_data %>%
group_by(id, date) %>% mutate(obs = n()) %>% ungroup %>%
group_by(id, date)  %>%
summarise_all( function(x)  mean(x, na.rm = T)) %>%
mutate_if(is.numeric, ~round(., 3)) %>%
datatable(caption = paste('Data to date, village level'),
rownames = TRUE,
extensions = c('Buttons', 'Scroller', 'ColReorder', 'FixedColumns'),
options = list(colreorder = TRUE,
dom = 'Bfrtip',
buttons = c('copy', 'csv', 'excel'),
deferRender = TRUE,
scrollY = 200,
scroller = TRUE,
scrollX = TRUE
#,
#          fixedColumns = list(leftColumns = 1)
))
skimr::skim(my_data)
library(dashdash)
rm(list = ls())
my_data <-
expand_grid(id = c("Bo", "Bombali", "Bonthe"), date = as.Date(c("2020-04-18", "2020-04-19", "2020-04-20"))) %>%
data.frame(stringsAsFactors = FALSE) %>%
mutate(n = 3) %>%
uncount(n) %>%
dplyr::mutate(
market_open	 = rbinom(n(), 1, .5),
price_rice	 = rbinom(n(), 1, .5),
aware	 = rbinom(n(), 1, .5),
water	 = rbinom(n(), 1, .5))
my_vars <- data.frame(
variable = c("market_open", "price_rice", "aware", "water"),
family = c("markets", "markets", "actions", "actions"),
short_label = c("Is market open?", "Price of a rice", "Aware of Covid19", "Access to water"),
description = c("details on market open", "Price of a cup of rice", "Details on aware of Covid19", "Details on access to water"),
stringsAsFactors = FALSE
)
my_text <- data.frame(para = "Intro text", datanote = "Note about data source")
my_maps <- "c:/temp/shapefiles"
dashdash(title = "title2",
subtitle = "subitle here",
my_data = my_data,
my_vars = my_vars,
my_text = my_text,
my_maps = my_maps)
library(dashboard)
library(dashdash)
my_data <-
expand_grid(id = c("Bo", "Bombali", "Bonthe"), date = as.Date(c("2020-04-18", "2020-04-19", "2020-04-20"))) %>%
data.frame(stringsAsFactors = FALSE) %>%
mutate(n = 3) %>%
uncount(n) %>%
dplyr::mutate(
market_open	 = rbinom(n(), 1, .5),
price_rice	 = rbinom(n(), 1, .5),
aware	 = rbinom(n(), 1, .5),
water	 = rbinom(n(), 1, .5))
my_vars <- data.frame(
variable = c("market_open", "price_rice", "aware", "water"),
family = c("markets", "markets", "actions", "actions"),
short_label = c("Is market open?", "Price of a rice", "Aware of Covid19", "Access to water"),
description = c("details on market open", "Price of a cup of rice", "Details on aware of Covid19", "Details on access to water"),
stringsAsFactors = FALSE
)
my_text <- data.frame(
para = "Intro text",
datanote = "Study specific note about data source"
)
my_maps <- "c:/temp/shapefiles"
dashdash(title = "title2",
subtitle = "subitle here",
author   = "D Ash",
my_data = my_data,
my_vars = my_vars,
my_text = my_text,
my_maps = my_maps)
my_text$title
datatable(my_vars, caption = "sample `my_vars` dataframe")
install.packages("tufte")
install.packages("rmdformats")
rmdformats::material
? rmdformats::material
remotes::install_github("wzb-ipi/dashdash")
remotes::install_github("wzb-ipi/dashdash")
readstata13::read.dta13("data/20200430_deidentified.dta")
my_vars <- readstata13::read.dta13("data/20200430_deidentified.dta")
head(my_vars)
dim(my_vars)
my_vars <- openxlsx::read.xlsx("20200426_measures.xlsx")
dim( my_vars)
head( my_vars)
names( my_vars)
my_vars <- openxlsx::read.xlsx("20200426_measures.xlsx")
names( my_vars)
DT:datatable(my_vars, caption = "sample `my_vars` dataframe")
DT::datatable(my_vars, caption = "sample `my_vars` dataframe")
my_text <- read.csv("my_text.csv")
my_text %>% kable(caption = "sample `my_text` dataframe")
re(ls = lis())
re(ls = list())
rm(ls = list())
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(DT)
# remotes::install_github("wzb-ipi/dashdash")
library(dashdash)
library(readstata13)
my_vars <- openxlsx::read.xlsx("20200426_measures.xlsx")
my_data <- readstata13::read.dta13("data/20200430_deidentified.dta")
my_data$date
my_data$district
my_vars <- openxlsx::read.xlsx("20200426_measures.xlsx")
View(my_data)
my_data <- readstata13::read.dta13("C:/Dropbox/Sierra Leone Covid/5_data/data_in/data/20200430_deidentified.dta") %>%
mutate(date = as.Date(date),
id =  district)
my_data <- readstata13::read.dta13("C:/Dropbox/Sierra Leone Covid/5_data/data_in/20200430_deidentified.dta") %>%
mutate(date = as.Date(date),
id =  district)
my_data <- readstata13::read.dta13("C:/Dropbox/Sierra Leone Covid/5_data/data_in/20200430_deidentified.dta")
my_data <- readstata13::read.dta13("C:/Dropbox/Sierra Leone Covid/5_data/data_in/20200430/20200430_deidentified.dta")
my_vars
my_vars$variable
variables <- my_vars %>% pull(variables) %>% unique
my_vars <- openxlsx::read.xlsx("20200426_measures.xlsx") %>%
filter(!is.na(variable))
variables <- my_vars %>% pull(variables) %>% unique
my_vars %>% pull(variables)
variables <- my_vars %>% pull(variable) %>% unique
variables
my_data <- readstata13::read.dta13("C:/Dropbox/Sierra Leone Covid/5_data/data_in/20200430/20200430_deidentified.dta") %>%
mutate(date = as.Date(date),
id =  district)
my_data <- my_data[, c("id", "data", vars_used)]
vars_used  <- measures %>% filter(!is.na(variable)) %>% pull(variable)
vars_used  <- my_vars %>% filter(!is.na(variable)) %>% pull(variable)
vars_used  <-c("start", "district", vars_used)
vars_used  <- my_vars %>% filter(!is.na(variable)) %>% pull(variable)
vars_used  <-c("id", "date", vars_used)
my_data <- readstata13::read.dta13("C:/Dropbox/Sierra Leone Covid/5_data/data_in/20200430/20200430_deidentified.dta") %>%
mutate(date = as.Date(date),
id =  district)
my_data <- my_data[, vars_used]
vars_used
vars_used %in% names(my_data)
vars_used[!(vars_used %in% names(my_data))]
print(paste("Missing variables:" vars_used[!(vars_used %in% names(my_data))]))
vars_used
names(my_data)
!(vars_used %in% names(my_data))
vars_used[!(vars_used %in% names(my_data))]
print(paste("Missing variables:", vars_used[!(vars_used %in% names(my_data))]))
print(paste("Missing variables:",
paste(vars_used[!(vars_used %in% names(my_data))], collapse = ", ")))
vars_used <- vars_used[(vars_used %in% names(my_data))]
vars_used
my_data <- my_data[, vars_used]
DT::datatable(my_data, caption = "data dataframe")
my_data$date
table(my_data$date)
table(my_data$id)
vars_used
table(my_data$aware)
table(my_data$wash)
mean(my_data$wash, na.rm = TRUE)
? readstata13::read.dta13
my_data <- readstata13::read.dta13("C:/Dropbox/Sierra Leone Covid/5_data/data_in/20200430/20200430_deidentified.dta",
convert.factors = FALSE) %>%
mutate(date = as.Date(date),
id =  district)
table(my_data$wash)
my_data$id
my_data$district
2^10
my_data <- readstata13::read.dta13("C:/Dropbox/Sierra Leone Covid/5_data/data_in/20200430/20200430_deidentified.dta") %>%select(district) %>% mutate(i = 1:n()) %>% rename(district = district_string)
my_data <- readstata13::read.dta13("C:/Dropbox/Sierra Leone Covid/5_data/data_in/20200430/20200430_deidentified.dta") %>%select(district) %>% mutate(i = 1:n()) %>% rename(id = district)
head(my_data)
dist_df <- readstata13::read.dta13("C:/Dropbox/Sierra Leone Covid/5_data/data_in/20200430/20200430_deidentified.dta") %>%select(district) %>% mutate(i = 1:n()) %>% rename(id = district)
my_data <- readstata13::read.dta13("C:/Dropbox/Sierra Leone Covid/5_data/data_in/20200430/20200430_deidentified.dta",
convert.factors = FALSE) %>%
mutate(date = as.Date(date)) %>%
left_join(dist_df)
my_data <- readstata13::read.dta13("C:/Dropbox/Sierra Leone Covid/5_data/data_in/20200430/20200430_deidentified.dta",
convert.factors = FALSE) %>%
mutate(i = 1:n()) %>%
mutate(date = as.Date(date)) %>%
left_join(dist_df)
my_vars <- openxlsx::read.xlsx("20200426_measures.xlsx") %>%
filter(!is.na(variable))
vars_used  <- my_vars %>% filter(!is.na(variable)) %>% pull(variable)
vars_used  <-c("id", "date", vars_used)
DT::datatable(my_vars, caption = "measures dataframe")
dist_df <- readstata13::read.dta13("C:/Dropbox/Sierra Leone Covid/5_data/data_in/20200430/20200430_deidentified.dta") %>%select(district) %>% mutate(i = 1:n()) %>% rename(id = district)
my_data <- readstata13::read.dta13("C:/Dropbox/Sierra Leone Covid/5_data/data_in/20200430/20200430_deidentified.dta",
convert.factors = FALSE) %>%
mutate(i = 1:n()) %>%
mutate(date = as.Date(date)) %>%
left_join(dist_df)
if(!all(vars_used %in% names(my_data))){
print(paste("Missing variables:",
paste(vars_used[!(vars_used %in% names(my_data))], collapse = ", ")))
vars_used <- vars_used[(vars_used %in% names(my_data))]
}
my_data <- my_data[, vars_used]
DT::datatable(my_data, caption = "data dataframe")
my_text <- read.csv("my_text.csv")
my_maps <- "C:/Dropbox/github/sl-dashboard/docs/SL/data/shapefiles"
title = NULL
subtitle = NULL
author = NULL
if(is.null(title)) title <- my_text$title
if(is.null(title)) title <- "No title provided"
if(is.null(subtitle)) subtitle <- my_text$subtitle
if(is.null(subtitle)) subtitle <- " "
if(is.null(author)) author <- my_text$author
if(is.null(author)) author <- " "
if(!exists("my_data")) stop("my_data missing")
if(!exists("my_vars")) stop("my_vars missing")
if(!exists("my_text")) stop("my_text missing")
if(!all(c("date", "id") %in% names(my_data))) stop("my_data should include date and id variables")
my_data <- mutate(my_data, date = as.Date(date))
families   <- my_vars %>% pull(family) %>% unique
n_families <- length(families)
k          <- 1
vars_used  <- my_vars %>% filter(!is.na(variable)) %>% pull(variable)
vars_used  <-c("start", "district", vars_used)
shp <- readOGR(
dsn= my_maps,
layer="SLE_adm3",
verbose=FALSE,
stringsAsFactors = F
)
shp_df <- broom::tidy(shp, region = "NAME_2")
my_data %>%
group_by(id, date) %>% mutate(obs = n()) %>% ungroup %>%
group_by(id, date)  %>%
summarise_all( function(x)  mean(x, na.rm = T)) %>%
mutate_if(is.numeric, ~round(., 3)) %>%
datatable(caption = paste('Data to date, village level'),
rownames = TRUE,
extensions = c('Buttons', 'Scroller', 'ColReorder', 'FixedColumns'),
options = list(colreorder = TRUE,
dom = 'Bfrtip',
buttons = c('copy', 'csv', 'excel'),
deferRender = TRUE,
scrollY = 200,
scroller = TRUE,
scrollX = TRUE
#,
#          fixedColumns = list(leftColumns = 1)
))
skimr::skim(my_data)
fam <- families[k]
fam
vars <- my_vars %>% filter(family == fam & !is.na(variable)) %>% pull(variable)
var_labs <- my_vars %>% filter(family == fam & !is.na(variable)) %>% pull(short_label)
names(var_labs) <- vars
current_means <- my_data[, c("id", "date", vars)] %>%
filter(date == max(date)) %>%
group_by(id, date)  %>%
summarise_all( function(x)  mean(x, na.rm = T))
current_means %>%
kable(caption = "Mean responses in each district (most recent date)", col.names = c("District", "Date", var_labs), digits = 2)
pd <- position_dodge(0.1) # move them .05 to the left and right
my_data %>%
select(all_of(c("id", "date", vars))) %>%
reshape2::melt(id.vars= c("id", "date"))  %>%
group_by(id, date, variable) %>%
summarise_all(list(~mean(., na.rm = TRUE), ~sd(., na.rm = TRUE), ~length(.))) %>%
mutate(se = sd / sqrt(length)) %>%
ggplot(aes(x=date, y=mean)) +
geom_errorbar(aes(ymin=mean-1.96*se, ymax=mean+1.96*se), width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd) +
facet_grid(variable ~ id, labeller = labeller(variable = var_labs))
current_means %>%
kable(caption = "Mean responses in each district (most recent date)", col.names = c("District", "Date", var_labs), digits = 2)
vars
my_data %>%
select(all_of(c("id", "date", vars))) %>%
reshape2::melt(id.vars= c("id", "date"))  %>%
group_by(id, date, variable) %>%
summarise_all(list(~mean(., na.rm = TRUE), ~sd(., na.rm = TRUE), ~length(.))) %>%
mutate(se = sd / sqrt(length)) %>%
ggplot(aes(x=date, y=mean)) +
geom_errorbar(aes(ymin=mean-1.96*se, ymax=mean+1.96*se), width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd) +
facet_grid(variable ~ id, labeller = labeller(variable = var_labs))
? facet_grid
my_data %>%
select(all_of(c("id", "date", vars))) %>%
reshape2::melt(id.vars= c("id", "date"))  %>%
group_by(id, date, variable) %>%
summarise_all(list(~mean(., na.rm = TRUE), ~sd(., na.rm = TRUE), ~length(.))) %>%
mutate(se = sd / sqrt(length)) %>%
ggplot(aes(x=date, y=mean)) +
geom_errorbar(aes(ymin=mean-1.96*se, ymax=mean+1.96*se), width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd) +
facet_grid(variable ~ id, scales = "free_y", labeller = labeller(variable = var_labs))
par(mar=c(0,0,0,0))
df_map <- left_join(shp_df, current_means)  %>% select(-date) %>%
reshape2::melt(id.vars= c("id", "long", "lat", "order", "hole", "piece", "group"))
ggplot() +
geom_polygon(data = df_map,
aes( x = long, y = lat,  group = group, fill=value), color="white") +
theme_void() + coord_map() + facet_wrap(~variable, labeller = labeller(variable = var_labs))
df_map
my_text <- data.frame(
para = "Intro text",
datanote = "Study specific note about data source"
map_layer = "SLE_adm3",
map_region =  = "NAME_2"
)
my_text <- data.frame(
para = "Intro text",
datanote = "Study specific note about data source"
map_layer = "SLE_adm3",
map_region =  = "NAME_2"
)
my_text <- data.frame(
para = "Intro text",
datanote = "Study specific note about data source"
map_layer = "SLE_adm3",
map_region =  "NAME_2"
)
my_text <- data.frame(
para = "Intro text",
datanote = "Study specific note about data source",
map_layer = "SLE_adm3",
map_region =  "NAME_2"
)
detach(my_text)
my_text
my_data <-
expand_grid(id = c("Bo", "Bombali", "Bonthe"), date = as.Date(c("2020-04-18", "2020-04-19", "2020-04-20"))) %>%
data.frame(stringsAsFactors = FALSE) %>%
mutate(n = 3) %>%
uncount(n) %>%
dplyr::mutate(
market_open	 = rbinom(n(), 1, .5),
price_rice	 = rbinom(n(), 1, .5),
aware	 = rbinom(n(), 1, .5),
water	 = rbinom(n(), 1, .5))
my_vars <- data.frame(
variable = c("market_open", "price_rice", "aware", "water"),
family = c("markets", "markets", "actions", "actions"),
short_label = c("Is market open?", "Price of a rice", "Aware of Covid19", "Access to water"),
description = c("details on market open", "Price of a cup of rice", "Details on aware of Covid19", "Details on access to water"),
stringsAsFactors = FALSE
)
my_args <- data.frame(
para = "Intro text",
datanote = "Study specific note about data source",
map_path = "c:/temp/shapefiles"
map_layer = "SLE_adm3",
map_region =  "NAME_2"
)
dashdash(output_file = "c:/temp/dashtest.html",
title = "title2",
subtitle = "subtitle here",
my_data = my_data,
my_vars = my_vars,
my_args = my_args)
my_args <- data.frame(
para = "Intro text",
datanote = "Study specific note about data source",
map_path = "c:/temp/shapefiles"
map_layer = "SLE_adm3",
map_region =  "NAME_2"
)
my_args <- data.frame(
para = "Intro text",
datanote = "Study specific note about data source",
map_path = "c:/temp/shapefiles",
map_layer = "SLE_adm3",
map_region =  "NAME_2"
)
dashdash(output_file = "c:/temp/dashtest.html",
title = "title2",
subtitle = "subtitle here",
my_data = my_data,
my_vars = my_vars,
my_args = my_args)
list(titls = "a", subtitle = "b")
x <- list(title = "a", subtitle = "b")
unlist(x)
? detach
attach(x)
title
x
is.null(f)
d = NULL
x = data.fram(a = 1, d = 2)
x = data.frame(a = 1, d = 2)
detach(x)
attach(x)
d
? attach
my_args <- data.frame(
intro_text = "Intro text",
intro_note = "Lots of great people worked on this. More information here: ...",
data_note = "Study specific note about data source",
map_path = "c:/temp/shapefiles",
map_layer = "SLE_adm3",
map_region =  "NAME_2"
)
map_region <- my_args$map_region
map_layer  <- my_args$map_layer
map_path <- my_args$map_path
map_region
my_args <- data.frame(
intro_text = "Intro text",
intro_note = "Lots of great people worked on this. More information here: ...",
data_note = "Study specific note about data source",
map_path = "c:/temp/shapefiles",
map_layer = "SLE_adm3",
map_region =  "NAME_2",
stringsAsFactors = FALSE
)
map_region <- my_args$map_region
map_region
map_layer  <- my_args$map_layer
map_layer
? write.csv
library(dplyr)
my_data <-
expand_grid(id = c("Bo", "Bombali", "Bonthe"), date = as.Date(c("2020-04-18", "2020-04-19", "2020-04-20"))) %>%
data.frame(stringsAsFactors = FALSE) %>%
mutate(n = 3) %>%
uncount(n) %>%
dplyr::mutate(
market_open	 = rbinom(n(), 1, .5),
price_rice	 = rbinom(n(), 1, .5),
aware	 = rbinom(n(), 1, .5),
water	 = rbinom(n(), 1, .5))
my_vars <- data.frame(
variable = c("market_open", "price_rice", "aware", "water"),
family = c("markets", "markets", "actions", "actions"),
short_label = c("Is market open?", "Price of a rice", "Aware of Covid19", "Access to water"),
description = c("details on market open", "Price of a cup of rice", "Details on aware of Covid19", "Details on access to water"),
stringsAsFactors = FALSE
)
my_args <- data.frame(
para = "Intro text",
datanote = "Study specific note about data source",
map_path = "c:/temp/shapefiles",
map_layer = "SLE_adm3",
map_region =  "NAME_2"
)
dashdash(output_file = "c:/temp/dashtest.html",
title = "title2",
subtitle = "subtitle here",
my_data = my_data,
my_vars = my_vars,
my_args = my_args)
my_args <- data.frame(
para = "Intro text",
datanote = "Study specific note about data source",
map_path = "c:/temp/shapefiles",
map_layer = "SLE_adm3",
map_region =  "NAME_2",
stringsAsFactors = FALSE
)
dashdash(output_file = "c:/temp/dashtest.html",
title = "title2",
subtitle = "subtitle here",
my_data = my_data,
my_vars = my_vars,
my_args = my_args)
