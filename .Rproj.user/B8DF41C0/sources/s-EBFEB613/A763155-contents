---
title: "Covid Surveys: Data Display and Aggregation"
output:
  rmdformats::html_clean
---

```{r, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(DT)
```

# Motivation

Lots of Covid-19 studies are going on. This tool can be used to present basic results in a simple manner in real time (or, as quickly as you can make your data available). 

It also has two ulterior motives also:

* If teams use this it would be easy to use it to create a meta-dashboard across teams and countries making it easy to locate and view the good work being done
* If teams use this then it would not be hard to pool studies together to calculate cross study aggregates. In addition to the basic information, good aggregation woudl require sampling weights information.

# Inputs

## 1 `my_vars`

A spreadsheet that says what your variables are and to which families they belong. For example:

```{r, echo = FALSE}
 my_vars <- data.frame(
   variable = c("market_open", "price_rice", "aware", "water"),
   family = c("markets", "markets", "actions", "actions"),
   short_label = c("Is market open?", "Price of a rice", "Aware of Covid19", "Access to water"),
   description = c("details on market open", "Price of a cup of rice", "Details on aware of Covid19", "Details on access to water"),
   stringsAsFactors = FALSE
 )

kable(my_vars, caption = "sample `my_vars` dataframe")

```

## 2 `my_data`

Your data, cleaned and transformed to the point where it is ready for display:

```{r, echo = FALSE}
my_data <-
   expand_grid(id = c("Bo", "Bombali", "Bonthe"), date = as.Date(c("2020-04-18", "2020-04-19", "2020-04-20"))) %>%
   data.frame(stringsAsFactors = FALSE) %>%
     mutate(n = 3) %>%
     uncount(n) %>%
     dplyr::mutate(
     market_open	 = rbinom(n(), 1, .5),
     price_rice	 = rbinom(n(), 1, .5),
     aware	 = rbinom(n(), 1, .5),
     water	 = rbinom(n(), 1, .5))

datatable(my_data, caption = "sample `my_data` dataframe")

```

The key requirements are that the dataset contains an `id` variable which gives the level at which you want the data to be aggregated for averages -- this variable should correspond to your id variable in your shape files.  

## 3 `my_text`

Third, a spreadsheet with the text you want to appear. You can provide title and author information in here, or you can provide these directly to the dashboard function.

```{r, echo = FALSE}

 my_text <- data.frame(
   para = "Intro text",
   datanote = "Study specific note about data source")

my_text %>% kable(caption = "sample `my_text` dataframe")

```

## 4 `my_maps`

Last if you want to display maps you should give a path to your shape files:

```{r}
 my_maps <- "c:/temp/shapefiles"
```


# Produce Dashboard

The dashboard is then produced by `dashdash::dashdash` like this:

```{r, message = FALSE, warning = FALSE, include = FALSE}

dashdash::dashdash(
  output_file = "C:/Dropbox/github/dashdash/docs/example.html",
  title = "A sample dashboard for my study",
  subtitle = "What's special about this study",
  author   = "D Ash",
  my_data = my_data,
  my_vars = my_vars,
  my_text = my_text,
  my_maps = my_maps)

```


```{r, eval  = FALSE}

dashdash::dashdash(
  output_file = "docsexample.html",
  title = "A sample dashboard for my study",
  subtitle = "What's special about this study",
  author   = "D Ash",
  my_data = my_data,
  my_vars = my_vars,
  my_text = my_text,
  my_maps = my_maps)

```

You can then view it: [example.html](example.html)

# Aggregating dashboards

Coming next
