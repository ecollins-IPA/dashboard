---
title: "Social and political correlates of Covid-19"
author:
- "Manuel Bosancianu^[WZB, Berlin Social Science Center.]"
- "Hanno Hilbig*^[Harvard University]"
- "Macartan Humphreys*^[Columbia University, corresponding author, `macartan.humphreys@wzb.eu`]"
- "Sampada KC*"
- "Nils Lieber*^[Bayreuth University]"
- "Alexandra Scacco*"
date: "`r format(Sys.time(), '%d %B, %Y')` draft. Most recent version [here](https://wzb-ipi.github.io/corona/paper.pdf)"
output: beamer_presentation
bibliography: bib.bib
urlcolor: orange
header_includes:
  - \usepackage{booktabs}
  - \usepackage{longtable}
  - \usepackage{threeparttablex}
  - \usepackage{pdflscape}
  - \usepackage{titlesec}
  - \titleformat*{\section}{\LARGE\bfseries}
  - \titleformat*{\subsection}{\Large\bfseries}
  - \titleformat*{\subsubsection}{\Large\bfseries}
---


```{r setup, include=FALSE}
rm(list = ls())

knitr::opts_chunk$set(echo = TRUE)

check.packages <- function(pkg){
  new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
  if (length(new.pkg))
    install.packages(new.pkg, dependencies = TRUE,
                     repos = "https://cran.rstudio.com")
  sapply(pkg, require, character.only = TRUE)
}

pkgList <- c("RCurl","WDI","readxl","httr","knitr","tidyverse",
             "estimatr","stargazer","countrycode","dataverse",
             "zip", "lubridate", "rvest", "fastDummies", "lfe",
             "directlabels", "kableExtra", "ggrepel", "ggpubr", "tidyverse",
             "grid")

check.packages(pkgList)

source("code/thirds_graph.R")
source("code/add_linebreak.R")
source("code/results_list.R")
source("code/plotresults.R")
source("code/oos_plot.R")
source("code/short_table.R")
```

```{r load lasso results , echo = FALSE, message=F, warning=F}
## Load all Lasso results
lasso_res <- read_rds("saved/lasso_res.rds")
n_controls <- 4

# get data
measures <- read.csv("measures.csv") %>% filter(include == 1)

## 

lasso_1 <- lasso_res$lcoef_controls %>% 
  filter(outcome == "deaths_cumul_log" & abs(coef)>0) %>%
  filter(!duplicated(vars)) %>% 
  filter(rank(-abs(coef))<=n_controls)

controls <- lasso_1$vars
controls_labels <- lasso_1$labels

controls_text <- paste(paste(tolower(controls_labels)[1:3], collapse = ", "), ", and ", tolower(controls_labels)[4])
controls_text <- gsub("\n", " ", controls_text)
controls_text <- gsub("ghsi", "GHSI", controls_text)
controls_text <- gsub("imhe", "IMHE", controls_text)
controls_text <- gsub(" ,", ",", controls_text)

## This automatically selects the top four covariates by outcome
## We use this as input for the results_list function

controls_use <- lasso_res$lcoef_controls %>% 
  filter(abs(coef)>0) %>%
  group_by(outcome) %>% 
  filter(!duplicated(vars)) %>% 
  filter(rank(-abs(coef))<=n_controls) %>% 
  ungroup() %>% 
  dplyr::select(vars, outcome)
```


```{r load data, echo = FALSE, message=F, warning=F}
## MEASURES
measures <- read.csv("measures.csv") %>% filter(include == 1)

## DATA 

df_full   <- read.csv("docs/df_full.csv")
df        <- read.csv("saved/df.csv")
data_date <- max(as.Date(df$DateRep), na.rm = TRUE)
df_today  <- df %>% filter(as.Date(df$DateRep) == data_date)

# For the relative analysis figure out which day has at leat 120 cases
rel_cut <- table(df$elapsed_rel)[table(df$elapsed_rel) >= 120] %>% names %>% as.numeric %>% max
df_rel <- filter(df, elapsed_rel == rel_cut & complete.cases(dplyr::select(df, all_of(controls))))
```

```{r additional output setup, echo = FALSE, message=F, warning=F}
## Here we declare the additional outcomes for which results will be printed in the appendix
## Since plots always show results for two outcomes, outcomes need to always be declared in pairs
## Ie this 'list of lists' structure needs to remain as it is, with 2 elements in each sublist

Y_additional <- list(c('lockdown_bin', 'distancing_bin'),
                     c('StringencyIndex', 'mobility_index'))
Y_additional_labels <- list(c('Lockdown', 'Distancing measures'),
                            c('Response stringency', 'Population mobility'))

## Controls: If lasso controls are desired, the outcomes needs to be added in the lasso script
## Otherwise we will always use the lasso controls from the total deaths outcome
```

\fontsize{12}{22}
\selectfont


# Motivation

* review major literatures from political science and cognate disciplines that highlight political and social factors that plausibly render governments and societies better able to promote effective policies and counter threats. 
* assess the extent to which measures suggested by these accounts can help explain cross-national differences in Covid-19-related mortality.


* Not prediction
* Not causal inference


# Caveats 


* **Causal Inference**. Limitations fo causal inference for this problem!

* **Measurement concerns**. Outcome data on deaths from the European Centre for Disease Prevention and Control, which provides daily updates. We will use excess mortality as one of our core outcome measures in planned future analysis


* **Changing skew, changing scale**. The distribution of the outcome variable is highly skewed at present---with many cases with 0 deaths and a handful with deaths in the thousands---and is changing daily.  


* Still in early stages of the pandemic and the effects of political and social structures may take time to leave a mark. 

* A real-time [tracker](https://wzb-ipi.github.io/corona/) provides continuous updates.


# Outcomes

## Reported cumulative deaths

Distribution of the unlogged outcome for `r format(data_date, '%d %B, %Y')` is shown in Figure \ref{outcomed}, for countries with at least 10 deaths.


```{r, fig.cap="\\label{outcomed} Distribution of reported deaths", echo = FALSE, warning = FALSE, fig.width = 10, fig.height = 5}
df_full %>% filter(as.Date(DateRep) == data_date & deaths_cumul > 10) %>%
  mutate(group = if_else(gdppc > median(gdppc, na.rm = TRUE),
          paste0("GDP/capita > ",
           paste0(round(1000*round(median(gdppc, na.rm = TRUE)), 0), " USD PPP")),
          paste0("GDP/capita < ",
           paste0(round(1000*round(median(gdppc, na.rm = TRUE)), 0), " USD PPP")))) %>%
  filter(!is.na(group)) %>%
  mutate(countriesAndTerritories = str_replace_all(countriesAndTerritories, "_", " ")) %>%
  ggplot(aes(x = reorder(countriesAndTerritories, deaths_cumul_log+1),
             y = deaths_cumul)) +   
  geom_point(shape = 21, fill = 'white') +
  labs(x = "Country",
       y = "Total deaths (log scale)") +
  theme_bw() +
  theme(panel.grid.major = element_blank()) +
  facet_wrap(group ~ ., scales = "free_y", ncol = 2) +
  scale_y_continuous(trans='log10') +
  coord_flip()

```

# Across regions (World Bank classification)

```{r, fig.cap="\\label{figregions} Distribution of deaths by regions (China excluded))", echo = FALSE, warning = FALSE, fig.width = 10, fig.height = 4}

df_reg <- df  %>%
  group_by(region, elapsed) %>% summarize(region_deaths_cuml = sum(deaths_cumul, na.rm = TRUE)) %>%
  group_by(forcats::fct_explicit_na(region)) %>%
  mutate(relative_start = ifelse(any(region_deaths_cuml >= 1),    min(elapsed[region_deaths_cuml >= 1]), NA),
         elapsed_rel = elapsed - relative_start) %>%
  ungroup() %>%
filter(elapsed_rel > -1 & !is.na(region))  

df_reg %>%
  ggplot(aes(x=elapsed_rel, y=region_deaths_cuml + 1, color = region)) +
  geom_line() +
  theme_bw() +
  theme(panel.grid.minor = element_blank()) +
  xlab("Days since 1st death") +
  ylab("Cumulative deaths") +
  geom_dl(aes(label = region), method = list(dl.trans(x = x + .2), "last.points")) +
  theme(legend.position = "none")+
  scale_y_continuous(trans='log10') + xlim(0, max(df_reg$elapsed_rel, na.rm=TRUE) + 15)

```



# Secondary

* Deaths per capita
* Deaths since onset
* Policy outcomes

```{r, fig.cap="\\label{popdeath} Population sizes and total deaths", echo = FALSE, fig.width = 8, fig.height = 3.6, warning = FALSE}

df2 <- filter(df_today, deaths_cumul > 10)
df2 %>%
  mutate(do_label = ifelse(!between(((1+poptot*1000) * (1+deaths_cumul)),
                                   quantile((1+poptot*1000) * (1+deaths_cumul), 0.05, na.rm= T),
                                   quantile((1+poptot*1000) * (1+deaths_cumul), 0.7, na.rm= T)),
                           1, 0)) %>%  
  ggplot(aes(x=1+poptot*1000, y=1+deaths_cumul)) +
  geom_point(alpha = 0.5, size = 2) +
  xlab("Population")+
  ylab("Cumulative deaths") +
  theme_bw() +  
  scale_y_continuous(trans='log10') +
  scale_x_continuous(trans='log10') +
  theme(panel.grid.minor = element_blank()) +
  ggrepel::geom_text_repel(data = . %>% filter(do_label == 1),
                           aes(label = GeoId2))


M1 <- lm_robust(deaths_cumul ~ poptot, data = df_today)
M2 <- lm_robust(log(deaths_cumul+1) ~ log(poptot+1), data = df_today)

```




# What insights from political economy? Framework



![\label{dag}Model connecting background variables to reported outcomes]("figs/dag.pdf")



# State capacity

Figure \ref{thirdsss} shows the evolution of deaths for countries broken down by quantiles of these measures.

```{r scfig, echo = FALSE, fig.width=10, fig.height = 14, warning = F, message = FALSE, fig.cap = "\\label{thirdsss}State strength measures; cumulative deaths (logged)."}


ggarrange(
 
  thirds_graphs("goveffect", labels = c("Least effective", "Middle third", "Most effective"),
                plot_title = 'Government effectiveness (World Bank)'),
 
  thirds_graphs("pandemic_prep", labels = c("Least prepared", "Middle third", "Most prepared"),
                plot_title = 'Pandemic preparedness'),
 

  ncol = 1)


```


# Political structures


Figure \ref{thirdsps} shows the evolution of deaths for countries broken down by quantiles of these measures.

```{r scfig2, echo = FALSE, fig.width=11, fig.height = 16, warning = F, message = FALSE, fig.cap = "\\label{thirdsps}Political structures measures: cumulative deaths (logged)."}


ggarrange(

  thirds_graphs("vdem_libdem", labels = c("Less democratic", "Middle group", "More democratic"),
                plot_title = 'Democracy group'),

 thirds_graphs("electoral_pop", labels = c("Not populist",  "Populist"),
                plot_title = 'Electoral Populism', k = 2),

 thirds_graphs("woman_leader", labels = c("Not woman leader", "Woman leader"),
                plot_title = 'Women leaders', k = 2),

  ncol = 1)
 


```




# Social structures


```{r scfig3, echo = FALSE, fig.width=10, fig.height = 15, warning = F, message = FALSE, fig.cap = "\\label{thirds3}Social structure measures: cumulative deaths (logged)."}


ggarrange(


  thirds_graphs("al_etfra", labels = c("Less fractionalized", "Middle group", "More fractionalized"),
                plot_title = 'Ethnic fractionalization'),
 

  thirds_graphs("gini", labels = c("Most equal", "Middle third", "Most unequal"),
                plot_title = 'Inequality'),
 
  thirds_graphs("trustGov", labels = c("Weakest trust", "Middle third", "Greatest trust"),
                plot_title = 'Trust in government'),
 
  ncol = 1)
 

```

# Other

* Global linkages

* Environmental risks

* Health risks

*  Health systems


```{r, echo = FALSE}
M <- lm_robust(as.formula(paste("deaths_cumul_log ~ ", paste(controls, collapse = "+"))),
               data = filter(df, as.Date(df$DateRep) == data_date))
```

# Estimation

Estimating equation for day $t$ for each measure of interest $X$ is:

$$y^t =  \beta_0^t + \beta_1^t X + \gamma^tZ + \epsilon$$



# Controls

![ ]("figs/deaths_cumul_log_controls.pdf")

```{r, message = FALSE, warning = FALSE, fig.cap = "\\label{oos} Out of sample predictions from controls. Points above (below) the 45 degree line do worse (better) than predicted.", echo = FALSE}

oos_plot(depvar = "deaths_cumul_log", ylabel = "Actual Deaths (logged)", controls = controls)
```

# Primary patterns


```{r summaryresults, echo = FALSE,  message  = FALSE, warning = FALSE}

## Result function

results_summary <- function(data,
                            Y,
                            X = vars,
                            Xlab = NA,
                            XX = controls,
                            bivariate = FALSE,
                            standardize = FALSE) {
  ## If standardize
  if (standardize)
    data <- data %>%
      mutate_at(vars(one_of(X)),
                list(~./sd(., na.rm = T)))
 
  out <-  lapply(X, function(x) {
    
    rhs <- ifelse(bivariate, x, paste(unique(c(x, XX)), collapse = " + "))  
    
    my_formula <- paste0(Y, " ~ ",  rhs)

    m <- lm_robust(as.formula(my_formula), data = data)
    n <- m$N
    
    ## Return
    
    m %>% tidy() %>% slice(2) %>%
      mutate(n = n)
  }) %>%
    bind_rows()  %>%                   
    dplyr::select(term, estimate, conf.low, conf.high, p.value, n)
 
 
  ## Check if variable labels are desired
  ## If yes, recode the term variable
 
  if (!is.na(Xlab[1])) {
    tempdf <- data.frame(term = X, label = Xlab)
    out <- left_join(out, tempdf) %>%
      mutate(term = label)
  }
 
  ## Return
 
  out
}
```


```{r conclusion_plot, echo = F, message=F, warning=F, comment=NA, error=FALSE,fig.width=8.5,fig.height=11, fig.cap = "\\label{results_summary}Correlates of Corona outcomes. Points represent normalized coefficients from either a bivariate model (circles) or a model with controls (squares)."}

## Get the main results

Y_list   <- c('deaths_cumul_log', 'deaths_cumul_per_million_log')
Y_labels <- c('Deaths total (logged)', 'Deaths/million')

family <- c('state_cap_vars',
            'pol_account_vars',
            'social_vars',
            'econ_vars',
            'phys_vars',
            'epi_vars',
            'health_sys_vars')

family_labels <- c('1. State capacity',
                   '2. Political accountability',
                   '3. Social structures',
                   '4. Global\nlinkages',
                   '5. Physical risks',
                   '6. Health\nrisks',
                   '7. Health\nsystems')

results_list(data = df_today,
             Y_list = Y_list,
             Y_labels = Y_labels,
             family=family,
             family_labels=family_labels,
             controls_use=controls_use) %>%
  plotresults()

```




# Current predictive power of political and social correlates


![\label{lasso} Lasso prediction accuracy. We show MSEs separately by outcome and set of correlates.]("figs/lasso_mse_ratios.pdf")


# Current predictive power of political and social correlates

![\label{lasso3} Variables chosen by Lasso and corresponding coefficients, all variable families. All variables are standardized.]("figs/lasso_coef_pol.pdf")

# Future patterns {#pap}


**Predicting first-order relations**.

 
**Second-order relations.** 

*  Prediction costs


# Conclusion


* Negative result on political vars?

* Three natural extensions of this work. 

  * predictive value?
  * shift the focus from the national level to the sub-national level. 
  * focus on the global nature of the disease, to understand how relations between countries worsen or strengthen responses to the crisis.   


# Changing estimates over time

# State capacity
![ ]("figs/deaths_cumul_log_state.pdf")


# Political structures

![ ]("figs/deaths_cumul_log_account.pdf")

# Social structures
![ ]("figs/deaths_cumul_log_social.pdf")

# Global linkages

![ ]("figs/deaths_cumul_log_econ.pdf")

# Physical risks

![ ]("figs/deaths_cumul_log_phys.pdf")

# Health risks

![ ]("figs/deaths_cumul_log_epi.pdf")

# Health systems

![ ]("figs/deaths_cumul_log_health_sys.pdf")

